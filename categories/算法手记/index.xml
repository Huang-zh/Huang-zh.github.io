<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法手记 on 此间的少年</title>
    <link>https://Huang-zh.github.io/categories/%E7%AE%97%E6%B3%95%E6%89%8B%E8%AE%B0/</link>
    <description>Recent content in 算法手记 on 此间的少年</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 19 Sep 2023 21:41:08 +0800</lastBuildDate><atom:link href="https://Huang-zh.github.io/categories/%E7%AE%97%E6%B3%95%E6%89%8B%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode算法手记：26.删除有序数组中的重复项</title>
      <link>https://Huang-zh.github.io/posts/leetcode26/</link>
      <pubDate>Tue, 19 Sep 2023 21:41:08 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode26/</guid>
      <description>给你一个有序数组 nums ，请你原地删除重复出现的元素，使每个元素只出现一次 ，返回删除后数组的新长度。 不要使用额外的数组空间，你必须在原地修改输入数</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：1.两数之和</title>
      <link>https://Huang-zh.github.io/posts/leetcode1/</link>
      <pubDate>Tue, 19 Sep 2023 21:27:18 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode1/</guid>
      <description>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target 的那两个整数，并返回它们的数组下标。 你可以假设每种输入只会对应</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：986.区间列表的交集</title>
      <link>https://Huang-zh.github.io/posts/leetcode986/</link>
      <pubDate>Sun, 17 Sep 2023 12:10:26 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode986/</guid>
      <description>给定两个由一些闭区间组成的列表，firstList 和 secondList ，其中 firstList[i] = [start i, end i] 而 secondList[j] = [start j, end j] 。 每个区间列表都是成对不相交的，并且已经排序 。返回这两</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：1781.所有子字符串美丽值之和</title>
      <link>https://Huang-zh.github.io/posts/leetcode1781/</link>
      <pubDate>Sat, 16 Sep 2023 21:33:23 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode1781/</guid>
      <description>一个字符串的美丽值定义为：出现频率最高字符与出现频率最低字符的出现次数之差。 比方说，“abaacc” 的美丽值为 3 - 1 = 2 。 给你一个字符串 s ，</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：1764.通过连接另一个数组的子数组得到一个数组</title>
      <link>https://Huang-zh.github.io/posts/leetcode1764/</link>
      <pubDate>Sat, 16 Sep 2023 20:35:38 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode1764/</guid>
      <description>给你一个长度为 n 的二维整数数组 groups，同时给你一个整数数组 nums 。 你是否可以从 nums 中选出 n 个不相交的子数组，使得第 i 个子数组与 groups[i] （下标从 0 开</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：807.情感丰富的文字</title>
      <link>https://Huang-zh.github.io/posts/leetcode807/</link>
      <pubDate>Mon, 11 Sep 2023 22:12:46 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode807/</guid>
      <description>有时候人们会用重复写一些字母来表示额外的感受，比如 “hello” -&amp;gt; “heeellooo”, “hi” -&amp;gt; “hiii”。我们将相邻字母都相同的一串</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：792.匹配子序列的单词数</title>
      <link>https://Huang-zh.github.io/posts/leetcode792/</link>
      <pubDate>Sat, 09 Sep 2023 21:02:25 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode792/</guid>
      <description>给定字符串 s 和字符串数组 words, 返回 words[i] 中是 s 的子序列的单词个数。 字符串的子序列是从原始字符串中生成的新字符串，可以从中删去一些字符(可以是 none</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：777.在LR字符串中交换相邻字符</title>
      <link>https://Huang-zh.github.io/posts/leetcode777/</link>
      <pubDate>Thu, 07 Sep 2023 19:02:25 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode777/</guid>
      <description>在一个由 ‘L’ , ‘R’ 和 ‘X’ 三个字符组成的字符串（例如&amp;#34;RXXLRXRXL&amp;#34;）中进行移动操作。 一次移动操作指用一个 “LX”</description>
    </item>
    
    <item>
      <title>LeetCode算法手记：658.找到 K 个最接近的元素</title>
      <link>https://Huang-zh.github.io/posts/leetcode658/</link>
      <pubDate>Tue, 05 Sep 2023 21:16:44 +0800</pubDate>
      
      <guid>https://Huang-zh.github.io/posts/leetcode658/</guid>
      <description>给定一个排序好的数组 arr ，两个整数 k 和 x ，从数组中找到最靠近 x（两数之差最小）的 k 个数。返回的结果必须要是按升序排好的。 整数 a 比整数 b 更接近 x</description>
    </item>
    
  </channel>
</rss>
